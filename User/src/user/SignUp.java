/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package user;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Shrey
 */
public class SignUp extends javax.swing.JFrame {

    /**
     * Creates new form SignUp
     */
    String ImgPath = null;
    public SignUp() {
        initComponents();
        this.setLocationRelativeTo(null);   //Center display when run
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FirstNameL = new javax.swing.JLabel();
        PasswordL = new javax.swing.JLabel();
        FirstNameTF = new javax.swing.JTextField();
        PasswordPF = new javax.swing.JPasswordField();
        SPassword = new javax.swing.JToggleButton();
        SignUp = new javax.swing.JButton();
        Login = new javax.swing.JLabel();
        UsernameL = new javax.swing.JLabel();
        UsernameTF = new javax.swing.JTextField();
        LastNameL = new javax.swing.JLabel();
        LastNameTF = new javax.swing.JTextField();
        EmailL = new javax.swing.JLabel();
        ContactTF = new javax.swing.JTextField();
        EmailTF = new javax.swing.JTextField();
        ContactL = new javax.swing.JLabel();
        ConfimL = new javax.swing.JLabel();
        ConfimPF = new javax.swing.JPasswordField();
        ChangePhoto = new javax.swing.JButton();
        Photo = new javax.swing.JLabel();
        ContactError = new javax.swing.JLabel();
        UsernameError = new javax.swing.JLabel();
        FError = new javax.swing.JLabel();
        EmailError = new javax.swing.JLabel();
        LError = new javax.swing.JLabel();
        PasswordError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SignUp");

        FirstNameL.setText("First Name:");

        PasswordL.setText("Password:");

        SPassword.setText("Show Password");
        SPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPasswordActionPerformed(evt);
            }
        });

        SignUp.setText("SignUp");
        SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpActionPerformed(evt);
            }
        });

        Login.setForeground(new java.awt.Color(0, 0, 204));
        Login.setText("Already have an account? Login now");
        Login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginMouseClicked(evt);
            }
        });

        UsernameL.setText("Username:");

        UsernameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameTFActionPerformed(evt);
            }
        });

        LastNameL.setText("Last Name:");

        EmailL.setText("Email:");

        EmailTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTFActionPerformed(evt);
            }
        });

        ContactL.setText("Contact No.:");

        ConfimL.setText("Confim:");

        ChangePhoto.setText("Uploade Photo");
        ChangePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePhotoActionPerformed(evt);
            }
        });

        Photo.setBackground(new java.awt.Color(255, 255, 255));
        Photo.setOpaque(true);

        ContactError.setForeground(new java.awt.Color(153, 0, 0));

        UsernameError.setForeground(new java.awt.Color(153, 0, 0));

        FError.setForeground(new java.awt.Color(153, 51, 0));

        EmailError.setForeground(new java.awt.Color(153, 0, 0));

        LError.setForeground(new java.awt.Color(153, 51, 0));

        PasswordError.setForeground(new java.awt.Color(153, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(SignUp)
                    .addComponent(Login))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LastNameL)
                                    .addComponent(EmailL)
                                    .addComponent(ContactL)
                                    .addComponent(ConfimL)
                                    .addComponent(FirstNameL)
                                    .addComponent(PasswordL)
                                    .addComponent(UsernameL)
                                    .addComponent(ChangePhoto))
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UsernameTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ContactError, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(UsernameError, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(LastNameTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ContactTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EmailTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FError, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ConfimPF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FirstNameTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PasswordPF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EmailError, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(LError, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(PasswordError, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(Photo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ConfimPF, ContactTF, EmailTF, FirstNameTF, LastNameTF, PasswordPF, SPassword, UsernameTF});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ChangePhoto, ConfimL, ContactL, EmailL, FirstNameL, LastNameL, PasswordL, UsernameL});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstNameL)
                    .addComponent(FirstNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LastNameL)
                            .addComponent(LastNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(FError))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmailL)
                            .addComponent(EmailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(LError))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ContactL)
                            .addComponent(ContactTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(EmailError))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UsernameL)
                            .addComponent(UsernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ContactError))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PasswordL)
                            .addComponent(PasswordPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(UsernameError))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConfimL)
                            .addComponent(ConfimPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(PasswordError))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SPassword)
                    .addComponent(ChangePhoto))
                .addGap(10, 10, 10)
                .addComponent(Photo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(SignUp)
                .addGap(10, 10, 10)
                .addComponent(Login)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPasswordActionPerformed
        // Show / Hide Password 
        if(SPassword.isSelected()){
            PasswordPF.setEchoChar((char)0); //Show Password
            ConfimPF.setEchoChar((char)0); //Show Password
        }
        else{
            PasswordPF.setEchoChar('*'); //Hide Password
            ConfimPF.setEchoChar('*'); //Hide Password
        }
    }//GEN-LAST:event_SPasswordActionPerformed
    
    public boolean verifData() {
        // if any of field is empty        
        FError.setText(null);
        EmailError.setText(null);
        LError.setText(null);
        ContactError.setText(null);
        UsernameError.setText(null);
        PasswordError.setText(null);       
        String Req = "This Field is Requried";
        if(FirstNameTF.getText().isBlank()){
            FError.setText(Req);
            return false;
        }
        else if(LastNameTF.getText().isBlank()){
            LError.setText(Req);
            return false;
        }
        else if(EmailTF.getText().isBlank()){
            EmailError.setText(Req);
            return false;
        }
        else if(ContactTF.getText().isBlank()){
            ContactError.setText(Req);
            return false;
        }
        else if(UsernameTF.getText().isBlank()){
            UsernameError.setText(Req);
            return false;
        }
        else if(String.valueOf(PasswordPF.getPassword()).isBlank()||String.valueOf(ConfimPF.getPassword()).isBlank()){
            PasswordError.setText(Req);
            return false;
        }
        //when both the password is not same
        else if(!String.valueOf(PasswordPF.getPassword()).equals(String.valueOf(ConfimPF.getPassword()))) {
            PasswordError.setText("Password doesn't Match");            
            return false;
        }
        // a string without "@" or "." is an invalid email address
        else if(!EmailTF.getText().contains("@") || !EmailTF.getText().contains(".") ){ 
            EmailError.setText("Invalid Email Address");
            return false;
        }
        //Leangth of Contact No. must be 10  
        else if(ContactTF.getText().length() != 10){
            ContactError.setText("Enter 10 digit Contact No.");
            return false;
        }
        // Username already Exist
        else if(isUserExist(UsernameTF.getText())){
            UsernameError.setText("The Username Already Exist");
            return false;
        }
        else{
            // Contact No. Must be interger
            try {
                Long.parseLong(ContactTF.getText());
                //All Input Looks Good
                return true;
            }
            catch (NumberFormatException e) {
                ContactError.setText("Invalid Number");
                return false;                
            }
        }
    }
    
    private void SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpActionPerformed
        if(verifData()){
            Connection con = myConnection.getConnection();
            PreparedStatement ps;
            try {
                ps = con.prepareStatement("INSERT INTO `INFO` (`F_NAME`,`L_NAME`,`EMAIL`,`CONTACT_NO`,`USERNAME`,`PASSWORD`,`PHOTO`) VALUES(?,?,?,?,?,?,?)");
                ps.setString(1, FirstNameTF.getText());
                ps.setString(2, LastNameTF.getText());
                ps.setString(3, EmailTF.getText());
                ps.setString(4, ContactTF.getText());
                ps.setString(5, UsernameTF.getText());
                ps.setString(6, String.valueOf(PasswordPF.getPassword()));
                //Default Image
                if(ImgPath == null){
                    String DefImg = "/Users/Shrey/NetBeansProjects/User/src/user/defaultPicture.jpg";
                    ImgPath = DefImg;    
                }
                InputStream img = new FileInputStream(new File(ImgPath));
                ps.setBlob(7, img);
                if(ps.executeUpdate() != 0){
                    JOptionPane.showMessageDialog(null,"Account Created");
                    System.out.println("Account Created");
                    ps.close();
                    con.close();
                    System.out.println("mySQL Disconnected");
                    // Open Login
                    Login lin = new Login();//create an obj of Login form
                    lin.setVisible(true);
                    lin.setLocationRelativeTo(null);
                    this.dispose();
                }
                else{
                    JOptionPane.showMessageDialog(null,"ERROR in Account Creation");
                }
            } catch (HeadlessException | FileNotFoundException | SQLException ex) {
                Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,"ERROR:\n" + ex);
            }
        }
    }//GEN-LAST:event_SignUpActionPerformed

    private void EmailTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTFActionPerformed

    private void LoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginMouseClicked
        // Open Login Window
        Login lin = new Login(); // create an obj of Login form
        lin.setVisible(true);
        lin.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_LoginMouseClicked

    private void UsernameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameTFActionPerformed

    public boolean isUserExist(String UName){
        Connection con = myConnection.getConnection();
        PreparedStatement ps;
        ResultSet rs;
        try {
            ps = con.prepareStatement("SELECT * FROM `INFO` WHERE `USERNAME` = ?");
            ps.setString(1,UsernameTF.getText());
             rs = ps.executeQuery();
            if(rs.next()){
                rs.close();
                ps.close();
                con.close();
                System.out.println("mySQL Disconnected");                
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);        
        }
        return false;
    } 
    private void ChangePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePhotoActionPerformed
        // Change Photo
        JFileChooser fileC = new JFileChooser();
        // file extension Image filter i.e only jpg, png, gif
        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("Images","jpg","jpeg","png","gif");
        fileC.addChoosableFileFilter(fileFilter);
        fileC.setFileFilter(fileFilter);    // Set image fileFilter as default
        int openDialog = fileC.showOpenDialog(null);
        if(openDialog == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileC.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            ImgPath = path;
            ImageIcon ii = new ImageIcon(path);
            // resize image ii
            Image image = ii.getImage().getScaledInstance(Photo.getWidth(), Photo.getHeight(), Image.SCALE_SMOOTH);
            Photo.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_ChangePhotoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChangePhoto;
    private javax.swing.JLabel ConfimL;
    private javax.swing.JPasswordField ConfimPF;
    private javax.swing.JLabel ContactError;
    private javax.swing.JLabel ContactL;
    private javax.swing.JTextField ContactTF;
    private javax.swing.JLabel EmailError;
    private javax.swing.JLabel EmailL;
    private javax.swing.JTextField EmailTF;
    private javax.swing.JLabel FError;
    private javax.swing.JLabel FirstNameL;
    private javax.swing.JTextField FirstNameTF;
    private javax.swing.JLabel LError;
    private javax.swing.JLabel LastNameL;
    private javax.swing.JTextField LastNameTF;
    private javax.swing.JLabel Login;
    private javax.swing.JLabel PasswordError;
    private javax.swing.JLabel PasswordL;
    private javax.swing.JPasswordField PasswordPF;
    private javax.swing.JLabel Photo;
    private javax.swing.JToggleButton SPassword;
    private javax.swing.JButton SignUp;
    private javax.swing.JLabel UsernameError;
    private javax.swing.JLabel UsernameL;
    private javax.swing.JTextField UsernameTF;
    // End of variables declaration//GEN-END:variables
}
