/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package user;

import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Shrey
 */
public class Profile extends javax.swing.JFrame {

    /**
     * Creates new form Profile
     */
    String ImgPath = null;
    public Profile() {
        initComponents();
        this.setLocationRelativeTo(null);   //Center display when run
    }

    Profile(String UName) {
        initComponents();        
        Connection con = myConnection.getConnection();
        PreparedStatement ps;
        ResultSet rs;
        try {
            ps = con.prepareStatement("SELECT * FROM `INFO` WHERE `USERNAME` = ?");
            ps.setString(1,UName);
            rs = ps.executeQuery();
           if(rs.next()){
                UserID.setText(rs.getString("USER_ID"));
                Name.setText(rs.getString("FULL_NAME"));
                Email.setText(rs.getString("EMAIL"));
                Contact.setText(rs.getString("CONTACT_NO"));
                Username.setText(rs.getString("USERNAME"));
                Password.setText(rs.getString("PASSWORD"));
                // photo retrival from mysql
                byte[] img = rs.getBytes("PHOTO");
                //Resize The ImageIcon
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myImg = im.getScaledInstance(Photo.getWidth(), Photo.getHeight(),Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myImg);
                Photo.setIcon(newImage);
                rs.close();
                ps.close();
                con.close();
                System.out.println("mySQL Disconnected");
            }
        } catch (SQLException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);        
        }
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        Photo = new javax.swing.JLabel();
        UserIDL = new javax.swing.JLabel();
        NameL = new javax.swing.JLabel();
        EmailL = new javax.swing.JLabel();
        ContactL = new javax.swing.JLabel();
        UserID = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        Contact = new javax.swing.JLabel();
        ChangePhoto = new javax.swing.JButton();
        LogOut = new javax.swing.JButton();
        Username = new javax.swing.JLabel();
        Password = new javax.swing.JLabel();
        UsernameL = new javax.swing.JLabel();
        PasswordL = new javax.swing.JLabel();
        Delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User Profile");

        Photo.setBackground(new java.awt.Color(255, 255, 255));
        Photo.setOpaque(true);

        UserIDL.setText("UserID: ");

        NameL.setText("Name:");

        EmailL.setText("Email:");

        ContactL.setText("ContactNo.:");

        UserID.setText("NA");

        Name.setText("NA");

        Email.setText("NA");

        Contact.setText("NA");

        ChangePhoto.setText("Change profile Photo");
        ChangePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePhotoActionPerformed(evt);
            }
        });

        LogOut.setText("LogOut");
        LogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutActionPerformed(evt);
            }
        });

        Username.setText("NA");

        Password.setText("NA");

        UsernameL.setText("Username:");

        PasswordL.setText("Password:");

        Delete.setText("Delete Account Info");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Photo, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UserIDL)
                                    .addComponent(NameL)
                                    .addComponent(EmailL)
                                    .addComponent(ContactL)
                                    .addComponent(UsernameL)
                                    .addComponent(PasswordL))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Email, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Contact, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(UserID, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Name, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Username, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Password, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(LogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ChangePhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ChangePhoto, LogOut});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Contact, Email, Name, Password, UserID, Username});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ContactL, EmailL, NameL, PasswordL, UserIDL, UsernameL});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Photo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UserIDL)
                            .addComponent(UserID))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameL)
                            .addComponent(Name))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmailL)
                            .addComponent(Email))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ContactL)
                            .addComponent(Contact))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UsernameL)
                            .addComponent(Username))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PasswordL)
                            .addComponent(Password))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChangePhoto)
                        .addGap(5, 5, 5)
                        .addComponent(Delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LogOut)))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChangePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePhotoActionPerformed
        // Change Photo
        JFileChooser fileC = new JFileChooser();
        // file extension Image filter i.e only jpg, png, gif
        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("Images","jpg","jpeg","png","gif");
        fileC.addChoosableFileFilter(fileFilter);
        fileC.setFileFilter(fileFilter);    // Set image fileFilter as default
        int openDialog = fileC.showOpenDialog(null);  
        if(openDialog == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileC.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            ImgPath = path;
            ImageIcon ii = new ImageIcon(path);
            // resize image ii
            Image image = ii.getImage().getScaledInstance(Photo.getWidth(), Photo.getHeight(), Image.SCALE_SMOOTH);
            Photo.setIcon(new ImageIcon(image));
        }
        // uploding to mySQL
        Connection con = myConnection.getConnection();
        PreparedStatement ps;
        try {
                ps = con.prepareStatement("UPDATE `INFO` SET `PHOTO` = ? WHERE `USER_ID` = ?");
                ps.setString(2, UserID.getText());
                InputStream img = new FileInputStream(new File(ImgPath));
                ps.setBlob(1, img);
                if(ps.executeUpdate() != 0){
                    System.out.println("Account Updated");
                    ps.close();
                    con.close();
                    System.out.println("mySQL Disconnected");
                }
                else{
                    System.out.println("Account Updating Failed");
                    ps.close();
                    con.close();
                    System.out.println("mySQL Disconnected");
                }
            } catch (HeadlessException | FileNotFoundException | SQLException ex) {
                Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_ChangePhotoActionPerformed

    private void LogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutActionPerformed
        // Open Login Window
        Login lin = new Login(); // create an obj of Login form
        lin.setVisible(true);
        lin.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_LogOutActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int dialogResult = jOptionPane1.showConfirmDialog(null, "Are you sure you want to delete your account?", "Warning", jOptionPane1.YES_NO_OPTION);
        if (dialogResult == jOptionPane1.YES_OPTION) {
            Connection con = myConnection.getConnection();
            PreparedStatement ps;

            try {
                // Execute SQL DELETE statement
                ps = con.prepareStatement("DELETE FROM `INFO` WHERE `USER_ID` = ?");
                ps.setString(1, UserID.getText());

                if (ps.executeUpdate() != 0) {
                    System.out.println("Account Deleted");
                    ps.close();
                    con.close();
                    System.out.println("mySQL Disconnected");

                    // Close the Profile window
                    this.dispose();

                    // Open the Login window
                    Login login = new Login();
                    login.setVisible(true);
                    login.setLocationRelativeTo(null);
                } else {
                    System.out.println("Account Deletion Failed");
                    ps.close();
                    con.close();
                    System.out.println("mySQL Disconnected");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChangePhoto;
    private javax.swing.JLabel Contact;
    private javax.swing.JLabel ContactL;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel Email;
    private javax.swing.JLabel EmailL;
    private javax.swing.JButton LogOut;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel NameL;
    private javax.swing.JLabel Password;
    private javax.swing.JLabel PasswordL;
    private javax.swing.JLabel Photo;
    private javax.swing.JLabel UserID;
    private javax.swing.JLabel UserIDL;
    private javax.swing.JLabel Username;
    private javax.swing.JLabel UsernameL;
    private javax.swing.JOptionPane jOptionPane1;
    // End of variables declaration//GEN-END:variables
}
